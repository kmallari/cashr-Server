//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Apps = newAppsTable("public", "apps", "")

type appsTable struct {
	postgres.Table

	// Columns
	AppID         postgres.ColumnString
	CreatedAtTime postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type AppsTable struct {
	appsTable

	EXCLUDED appsTable
}

// AS creates new AppsTable with assigned alias
func (a AppsTable) AS(alias string) *AppsTable {
	return newAppsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AppsTable with assigned schema name
func (a AppsTable) FromSchema(schemaName string) *AppsTable {
	return newAppsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new AppsTable with assigned table prefix
func (a AppsTable) WithPrefix(prefix string) *AppsTable {
	return newAppsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new AppsTable with assigned table suffix
func (a AppsTable) WithSuffix(suffix string) *AppsTable {
	return newAppsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newAppsTable(schemaName, tableName, alias string) *AppsTable {
	return &AppsTable{
		appsTable: newAppsTableImpl(schemaName, tableName, alias),
		EXCLUDED:  newAppsTableImpl("", "excluded", ""),
	}
}

func newAppsTableImpl(schemaName, tableName, alias string) appsTable {
	var (
		AppIDColumn         = postgres.StringColumn("app_id")
		CreatedAtTimeColumn = postgres.IntegerColumn("created_at_time")
		allColumns          = postgres.ColumnList{AppIDColumn, CreatedAtTimeColumn}
		mutableColumns      = postgres.ColumnList{CreatedAtTimeColumn}
	)

	return appsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		AppID:         AppIDColumn,
		CreatedAtTime: CreatedAtTimeColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
