//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SessionAccessTokenSigningKeys = newSessionAccessTokenSigningKeysTable("public", "session_access_token_signing_keys", "")

type sessionAccessTokenSigningKeysTable struct {
	postgres.Table

	// Columns
	AppID         postgres.ColumnString
	CreatedAtTime postgres.ColumnInteger
	Value         postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SessionAccessTokenSigningKeysTable struct {
	sessionAccessTokenSigningKeysTable

	EXCLUDED sessionAccessTokenSigningKeysTable
}

// AS creates new SessionAccessTokenSigningKeysTable with assigned alias
func (a SessionAccessTokenSigningKeysTable) AS(alias string) *SessionAccessTokenSigningKeysTable {
	return newSessionAccessTokenSigningKeysTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SessionAccessTokenSigningKeysTable with assigned schema name
func (a SessionAccessTokenSigningKeysTable) FromSchema(schemaName string) *SessionAccessTokenSigningKeysTable {
	return newSessionAccessTokenSigningKeysTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SessionAccessTokenSigningKeysTable with assigned table prefix
func (a SessionAccessTokenSigningKeysTable) WithPrefix(prefix string) *SessionAccessTokenSigningKeysTable {
	return newSessionAccessTokenSigningKeysTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SessionAccessTokenSigningKeysTable with assigned table suffix
func (a SessionAccessTokenSigningKeysTable) WithSuffix(suffix string) *SessionAccessTokenSigningKeysTable {
	return newSessionAccessTokenSigningKeysTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSessionAccessTokenSigningKeysTable(schemaName, tableName, alias string) *SessionAccessTokenSigningKeysTable {
	return &SessionAccessTokenSigningKeysTable{
		sessionAccessTokenSigningKeysTable: newSessionAccessTokenSigningKeysTableImpl(schemaName, tableName, alias),
		EXCLUDED:                           newSessionAccessTokenSigningKeysTableImpl("", "excluded", ""),
	}
}

func newSessionAccessTokenSigningKeysTableImpl(schemaName, tableName, alias string) sessionAccessTokenSigningKeysTable {
	var (
		AppIDColumn         = postgres.StringColumn("app_id")
		CreatedAtTimeColumn = postgres.IntegerColumn("created_at_time")
		ValueColumn         = postgres.StringColumn("value")
		allColumns          = postgres.ColumnList{AppIDColumn, CreatedAtTimeColumn, ValueColumn}
		mutableColumns      = postgres.ColumnList{ValueColumn}
	)

	return sessionAccessTokenSigningKeysTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		AppID:         AppIDColumn,
		CreatedAtTime: CreatedAtTimeColumn,
		Value:         ValueColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
